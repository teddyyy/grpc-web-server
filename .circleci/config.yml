---
version: 2
jobs:
  test:
    docker:
      - image: golang:1.10.1
    working_directory: ~/grpc-web-server
    steps:
      - checkout
      - setup_remote_docker: {docker_layer_caching: true}
      - run:
          command: go tool vet main.go
  build:
    docker:
      - image: golang:1.10.1
    environment:
      - GOPATH: /home/circleci/go
    working_directory: /home/circleci/go/src/github.com/teddyyy/grpc-web-server
    steps:
      - checkout
      - setup_remote_docker: {docker_layer_caching: true}
      - run:
          command: apt-get -y update && apt-get -y install libprotobuf-dev libprotoc-dev protobuf-compiler
      - run:
          command: mkdir plugin/ && cd plugin/ && git clone https://github.com/grpc/grpc-web && cd grpc-web/ && make install-plugin
      - run:
          command: go get -u google.golang.org/grpc
      - run:
          command: go get -u github.com/golang/protobuf/protoc-gen-go
      - run:
          command: cd /home/circleci/go/src/github.com/teddyyy/grpc-web-server && GOOS=linux go build -o bin/server main.go
      - persist_to_workspace:
          root: .
          paths:
            - .
  package:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/grpc-web-server
    steps:
      - checkout
      - setup_remote_docker: {docker_layer_caching: true}
      - attach_workspace:
          at: .
      - run:
          name: gcloud auth
          command: |
            echo ${GCLOUD_SERVICE_KEY} | base64 --decode > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud --quiet auth configure-docker
            gcloud config set project agdc-k8s
            gcloud --quiet config set container/cluster agop-k8s
            gcloud config set compute/zone asia-northeast1
            gcloud --quiet container clusters get-credentials agop-k8s
            gcloud config set container/use_client_certificate True
      - run:
          name: docker build & push
          command: |
            if [[ -z "${CIRCLE_PULL_REQUEST}" ]] ; then
              docker build -t asia.gcr.io/agdc-k8s/grpc-web-server:${CIRCLE_SHA1} .
              docker tag asia.gcr.io/agdc-k8s/grpc-web-server:${CIRCLE_SHA1} asia.gcr.io/agdc-k8s/grpc-web-server:latest
              docker push asia.gcr.io/agdc-k8s/grpc-web-server
            else
              echo "Do not run docker"
            fi
      - run:
          name: deploy to k8s cluster
          command: |
            kubectl apply -f k8s/deployment.yaml
            kubectl apply -f k8s/hpa.yaml
            kubectl apply -f k8s/service.yaml
            kubectl patch deployment grpc-web-server -p "{\"spec\": {\"template\": {\"metadata\": {\"labels\": {\"date\": \"$(date +'%s')\" }}}}}"

workflows:
  version: 2
  test-and-build-and-package:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - package:
          requires:
            - build
          filters:
            branches:
              only: master
